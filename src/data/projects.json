{
	"projects": [
		{
			"id": "project1",
			"title": "Pet Tracker",
			"description": "A pet tracker app that allows you to track your pets using a LoRaWAN network",
			"demoLink": "#",
			"githubLink": "#",
			"learnMore": "/portfolio/pet-tracker",
			"blogContent": {
				"title": "Building a Pet Tracker with LoRaWAN",
				"date": "2024-03-15",
				"content": [
					{
						"type": "heading",
						"text": "Project Overview"
					},
					{
						"type": "paragraph",
						"text": "In this project, I began development of a pet tracking system using LoRaWAN technology and the Sidewalk gateway. The system consists of a small, lightweight tracker that can be attached to a pet's collar and a web application for monitoring their location."
					},
					{
						"type": "heading",
						"text": "Technical Stack"
					},
					{
						"type": "list",
						"items": [
							"LoRa Radio for long-range communication",
							"nrf52840 microcontroller for the tracker",
							"React for the web application",
							"MongoDB for storing location data"
						]
					},
					{
						"type": "heading",
						"text": "Getting Started"
					},
					{
						"type": "paragraph",
						"text": "We decided to use the Seeed Studio Xiao nRF52840 Sense board for the tracker, which comes with built-in Sidewalk capabilities. Once we got the board, we started small with the blinky example to get familiar with the Arduino IDE and bootloader."
					},
					{
						"type": "code",
						"language": "c",
						"text": "// blinky sameple\nvoid setup() {\n  pinMode(LED_BUILTIN, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(LED_BUILTIN, HIGH);\n  delay(1000);\n  digitalWrite(LED_BUILTIN, LOW);\n  delay(1000);\n}"
					},
					{
						"type": "paragraph",
						"text": "We very quicky decided that the Arduino IDE is limited and decided to try PlatformIO. PlatformIO helps build a much larger project and compile it onto the microcontroller. We found a helpful <a href=\"https://wiki.seeedstudio.com/xiao-ble-sidewalk/\" target=\"_blank\" rel=\"noopener noreferrer\">sidewalk tutorial</a> that we thought would give us a nice start."
					},
					{
						"type": "heading",
						"text": "Prototype Board"
					},
					{
						"type": "paragraph",
						"text": "The Seeed Studio Xiao nRF52840 sense board only has Bluetooth which does allow communication with Amazon Sidewalk but only has a range of 100 meters. We decided to create a board that would include a E220-900T22S LoRa module and be portable. We also included a connector for a LiPo battery to be recharged using the USB-C from the microcontroller. We decided to stick with a rechargeable solution since we arenâ€™t certain about how much power it draws. LoRa range is around 10km which allows for greater coverage and no need for GPS. The goal was to maximize battery while keeping a slim and comfortable profile for a pet."
					},
					{
						"type": "heading",
						"text": "Development"
					},
					{
						"type": "paragraph",
						"text": "I began following the guide and installed all the dependencies that are needed. There is a Nordic application for development called <a href=\"https://www.nordicsemi.com/Products/Development-tools/nrf-connect-for-desktop/\" target=\"_blank\" rel=\"noopener noreferrer\">nRF Connect</a> which helps setup the zephyr sdk and helps flash new firmware onto the nrf52840. Once I setup all the dev tools I ran the provisioning script for the Nordic SoC. This creates a credentials.json file that is used to authenticate with the Sidewalk network."
					},
					{
						"type": "image",
						"items": "sidewalk.png",
						"alt": "Sidewalk IOT Core",
						"caption": "Snapshot of IOT Core Sidewalk provisioned device"
					},
					{
						"type": "paragraph",
						"text": "Once I got the device provisioned I moved on to flashing the nrf52840. I got a Nordic nrf52840-DK and used the j-link built in. I then plugged it into the seeed studio expansion board using jumper wires. I made sure to only plug in the developer kit as it provides 3.7V power to the expansion board. If both are plugged in at the same time, it may cause over voltage to the expansion board and damage the current protection."
					},
					{
						"type": "heading",
						"text": "nRF Connect"
					},
					{
						"type": "paragraph",
						"text": "nRF allows you to read the whole memory space and flash .hex files to the device. It also prints logs to help debug and device. I used it to flash the credentials and firmware to ping sidewalk."
					},
					{
						"type": "image",
						"items": "nrf.png",
						"alt": "nRF Connect",
						"caption": "Snapshot of nRF Connect with the device connected"
					},
					{
						"type": "paragraph",
						"text": "I finished flashing the device and went into the Iot Core Dashboard and noticed I got an uplink and the device status changed to registered. This means that the nrf52840 is now communicating with the Amazon sidewalk network."
					},
					{
						"type": "image",
						"items": "uplink.png",
						"alt": "Uplink from Sidewalk",
						"caption": "Snapshot of IOT Core Sidewalk uplink"
					},
					{
						"type": "heading",
						"text": "Web Application"
					},
					{
						"type": "paragraph",
						"text": "I started following an <a href=\"https://github.com/aws-samples/aws-iot-core-for-amazon-sidewalk-sample-app/\" target=\"_blank\" rel=\"noopener noreferrer\">Amazon Sidewalk sample app</a> that uses the nrf52840 to send location data to the Sidewalk network. The sample app is written in C and uses the Zephyr RTOS. It allows you to send location data using Bluetooth and receive it on the web application. These are the commands I used to get the environment set up."
					},
					{
						"type": "code",
						"language": "bash",
						"text": "python3 -m pip install --user virtualenv\npython3 -m venv sample-app-env\nsource sample-app-env/bin/activate\npython3 -m pip install --upgrade pip\npython3 -m pip install -r requirements.txt\npython3 -m pip install pyjwt -t ./ApplicationServerDeployment/lambda/authLibs"
					},
					{
						"type": "paragraph",
						"text": "This is the deployment script that I used to deploy the sample app to AWS. It creates the necessary resources in AWS and deploys the web application."
					},
					{
						"type": "code",
						"language": "bash",
						"text": "python3 ApplicationServerDeployment/deploy_stack.py"
					},
					{
						"type": "image",
						"items": "app.png",
						"alt": "Sidewalk sample app",
						"caption": "Snapshot of the Sidewalk sample app"
					},
					{
						"type": "heading",
						"text": "Where I'm At"
					},
					{
						"type": "paragraph",
						"text": "I have reached a roadblock where the app is making a devices call and only returning an empty array. I believe that is what is causing the app to show that there are no devices connected even though the IoT Core dashboard shows a connected device. I am currently troubleshooting this issue and trying to figure out if it is a problem with the app or the device configuration."
					},
					{
						"type": "heading",
						"text": "Next Steps"
					},
					{
						"type": "paragraph",
						"text": "I think there is still a lot to do in this project. One big step I want to get accomplished is getting a location using just the Sidewalk network. Jlink has a lot of benefits, it allows debugging but can also store information in specific registers of the flash."
					},
					{
						"type": "iframe",
						"src": "https://xd.adobe.com/embed/feae6c77-c1fb-4968-9f7e-bdae4ec1c82f-abfd/",
						"title": "Pet Tracker Prototype web app",
						"alt": "Pet Tracker Prototype web app"
					},
					{
						"type": "paragraph",
						"text": "This is a simple concept design I had for a react website that would help locate your pet. On the bottom left it would have your pets and a corresponding location on a map. In the top left would be a simple user details button."
					},
					{
						"type": "heading",
						"text": "Conclusion"
					},
					{
						"type": "paragraph",
						"text": "have learned a lot throughout this project. A lot of the current tracking devices use similar chips but are all slightly different. I have also discovered that power draw is based on lots of factors which lead to battery life very hard to predict. Antenna design is not trivial, it may take many iterations to find the optimal range of an antenna. Jlink is a crucial part to helping to develop embedded hardware as it can help debug and work with the chip on a more bare metal approach. It is also tricky to try and find solutions to the problem one may have at the time but it is also good to reach out because someone may be able to help."
					},
					{
						"type": "heading",
						"text": "Future Work"
					},
					{
						"type": "list",
						"items": [
							"Test location using the Sidewalk network",
							"Write custom firmware to the nrf52840",
							"React for the web application with mapbox and pathtracking"
						]
					}
				]
			}
		},
		{
			"id": "project2",
			"title": "Dark Souls",
			"description": "A database application that stores weapons, armor, boss entities, spells, and all their corresponding stats",
			"demoLink": "#",
			"githubLink": "https://github.com/cs374/gg",
			"learnMore": "/portfolio/dark-souls",
			"blogContent": {
				"title": "Creating a Dark Souls Database Application",
				"date": "2024-02-20",
				"content": [
					{
						"type": "paragraph",
						"text": "This project involved creating a comprehensive database of Dark Souls game data, including weapons, armor, bosses, and spells. The application allows users to search, filter, and compare different items and their stats."
					},
					{
						"type": "heading",
						"text": "Features"
					},
					{
						"type": "list",
						"items": [
							"Advanced search functionality",
							"Item comparison tool",
							"Build calculator",
							"Interactive UI with game-inspired design"
						]
					},
					{
						"type": "heading",
						"text": "Technical Implementation"
					},
					{
						"type": "paragraph",
						"text": "The application uses a RESTful API architecture with a PostgreSQL database. The frontend is built with React and styled with a dark theme inspired by the game's aesthetic."
					}
				]
			}
		},
		{
			"id": "project3",
			"title": "Portfilio website",
			"description": "A website that I use to tell people about my projects and skills.",
			"demoLink": "https://nicoloco321.github.io/portfolio/",
			"githubLink": "https://github.com/nicoloco321/portfolio",
			"learnMore": "/portfolio/portfolio-website",
			"blogContent": {
				"title": "Creating My Portfolio Website",
				"date": "2024-01-10",
				"content": [
					{
						"type": "paragraph",
						"text": "This project involved creating a personal portfolio website to showcase my skills and projects. The website is built with React and uses a json file to store project data."
					},
					{
						"type": "heading",
						"text": "Technical Stack"
					},
					{
						"type": "list",
						"items": [
							"React for the web application",
							"JSON file for project data storage",
							"React-router for navigation"
						]
					}
				]
			}
		}
	]
}
